{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection Task 1. Theoretical Foundation: 1. Theoretical Foundation Projectile motion equations: - Horizontal: $$ x = v_0 \\cos(\\theta) t $$ - Vertical: $$ y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ Range formula: [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ] 2. Python Simulation import numpy as np import matplotlib.pyplot as plt g = 9.81 # gravity (m/s^2) v0 = 20 # velocity (m/s) angles = np.linspace(0, 90, 100) ranges = (v0**2 * np.sin(2 * np.radians(angles))) / g plt.plot(angles, ranges) plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle') plt.grid() plt.show() Task 2. Analysis of the Range: 1. Theoretical Foundation Projectile motion equations: - Horizontal: \\( x = v_0 \\cos(\\theta) t \\) - Vertical: \\( y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\) Range formula: [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ] 2. Python Simulation import numpy as np import matplotlib.pyplot as plt def compute_range(v0, g, angles): return (v0**2 * np.sin(2 * np.radians(angles))) / g g = 9.81 # gravity (m/s^2) v0_values = [10, 20, 30] # Different initial velocities angles = np.linspace(0, 90, 100) g_values = [1.62, 9.81, 24.79] # Moon, Earth, Jupiter labels = ['Moon', 'Earth', 'Jupiter'] plt.figure(figsize=(8, 5)) for v0 in v0_values: ranges = compute_range(v0, g, angles) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Initial Velocities') plt.legend() plt.grid() plt.show() plt.figure(figsize=(8, 5)) for g_val, label in zip(g_values, labels): ranges = compute_range(20, g_val, angles) plt.plot(angles, ranges, label=f'g = {label}') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Gravitational Accelerations') plt.legend() plt.grid() plt.show() Task 3. Practical Applications: 1. Theoretical Foundation Projectile motion equations: - Horizontal: \\( x = v_0 \\cos(\\theta) t \\) - Vertical: \\( y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\) Range formula: [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ] 2. Python Simulation import numpy as np import matplotlib.pyplot as plt def compute_range(v0, g, angles): return (v0**2 * np.sin(2 * np.radians(angles))) / g g = 9.81 # gravity (m/s^2) v0_values = [10, 20, 30] # Different initial velocities angles = np.linspace(0, 90, 100) g_values = [1.62, 9.81, 24.79] # Moon, Earth, Jupiter labels = ['Moon', 'Earth', 'Jupiter'] plt.figure(figsize=(8, 5)) for v0 in v0_values: ranges = compute_range(v0, g, angles) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Initial Velocities') plt.legend() plt.grid() plt.show() plt.figure(figsize=(8, 5)) for g_val, label in zip(g_values, labels): ranges = compute_range(20, g_val, angles) plt.plot(angles, ranges, label=f'g = {label}') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Gravitational Accelerations') plt.legend() plt.grid() plt.show() 3. Analysis of the Range Effect of Angle : The range peaks at \\( 45^\\circ \\) and is symmetric about this point. Effect of Initial Velocity : Higher velocity \\( v_0 \\) increases the range as \\( R \\propto v_0^2 \\) . Effect of Gravity : Lower gravity (e.g., Moon) results in a longer range, while higher gravity (e.g., Jupiter) shortens it. Task 4. Implementation: Simulating projectile motion with air resistance def projectile_motion(v0, angle, g, drag_coefficient=0): from scipy.integrate import solve_ivp angle_rad = np.radians(angle) vx0, vy0 = v0 * np.cos(angle_rad), v0 * np.sin(angle_rad) def equations(t, y): vx, vy = y[2], y[3] speed = np.sqrt(vx**2 + vy**2) drag = drag_coefficient * speed return [vx, vy, -drag * vx, -g - drag * vy] sol = solve_ivp(equations, [0, 5], [0, 0, vx0, vy0], dense_output=True) t = np.linspace(0, sol.t_events[0] if sol.t_events else 5, num=100) x, y = sol.sol(t)[0], sol.sol(t)[1] return x, y angles = [30, 45, 60] plt.figure(figsize=(8, 5)) for angle in angles: x, y = projectile_motion(20, angle, 9.81, drag_coefficient=0.01) plt.plot(x, y, label=f'Angle = {angle}\u00b0') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Vertical Distance (m)') plt.title('Projectile Motion with Air Resistance') plt.legend() plt.grid() plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"Task 1. Theoretical Foundation:","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion equations: - Horizontal: $$ x = v_0 \\cos(\\theta) t $$ - Vertical: $$ y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ Range formula: [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-python-simulation","text":"import numpy as np import matplotlib.pyplot as plt g = 9.81 # gravity (m/s^2) v0 = 20 # velocity (m/s) angles = np.linspace(0, 90, 100) ranges = (v0**2 * np.sin(2 * np.radians(angles))) / g plt.plot(angles, ranges) plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle') plt.grid() plt.show() Task 2. Analysis of the Range:","title":"2. Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation_1","text":"Projectile motion equations: - Horizontal: \\( x = v_0 \\cos(\\theta) t \\) - Vertical: \\( y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\) Range formula: [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-python-simulation_1","text":"import numpy as np import matplotlib.pyplot as plt def compute_range(v0, g, angles): return (v0**2 * np.sin(2 * np.radians(angles))) / g g = 9.81 # gravity (m/s^2) v0_values = [10, 20, 30] # Different initial velocities angles = np.linspace(0, 90, 100) g_values = [1.62, 9.81, 24.79] # Moon, Earth, Jupiter labels = ['Moon', 'Earth', 'Jupiter'] plt.figure(figsize=(8, 5)) for v0 in v0_values: ranges = compute_range(v0, g, angles) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Initial Velocities') plt.legend() plt.grid() plt.show() plt.figure(figsize=(8, 5)) for g_val, label in zip(g_values, labels): ranges = compute_range(20, g_val, angles) plt.plot(angles, ranges, label=f'g = {label}') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Gravitational Accelerations') plt.legend() plt.grid() plt.show() Task 3. Practical Applications:","title":"2. Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation_2","text":"Projectile motion equations: - Horizontal: \\( x = v_0 \\cos(\\theta) t \\) - Vertical: \\( y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\) Range formula: [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-python-simulation_2","text":"import numpy as np import matplotlib.pyplot as plt def compute_range(v0, g, angles): return (v0**2 * np.sin(2 * np.radians(angles))) / g g = 9.81 # gravity (m/s^2) v0_values = [10, 20, 30] # Different initial velocities angles = np.linspace(0, 90, 100) g_values = [1.62, 9.81, 24.79] # Moon, Earth, Jupiter labels = ['Moon', 'Earth', 'Jupiter'] plt.figure(figsize=(8, 5)) for v0 in v0_values: ranges = compute_range(v0, g, angles) plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Initial Velocities') plt.legend() plt.grid() plt.show() plt.figure(figsize=(8, 5)) for g_val, label in zip(g_values, labels): ranges = compute_range(20, g_val, angles) plt.plot(angles, ranges, label=f'g = {label}') plt.xlabel('Angle (\u00b0)') plt.ylabel('Range (m)') plt.title('Range vs. Angle for Different Gravitational Accelerations') plt.legend() plt.grid() plt.show()","title":"2. Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-analysis-of-the-range","text":"Effect of Angle : The range peaks at \\( 45^\\circ \\) and is symmetric about this point. Effect of Initial Velocity : Higher velocity \\( v_0 \\) increases the range as \\( R \\propto v_0^2 \\) . Effect of Gravity : Lower gravity (e.g., Moon) results in a longer range, while higher gravity (e.g., Jupiter) shortens it. Task 4. Implementation:","title":"3. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#simulating-projectile-motion-with-air-resistance","text":"def projectile_motion(v0, angle, g, drag_coefficient=0): from scipy.integrate import solve_ivp angle_rad = np.radians(angle) vx0, vy0 = v0 * np.cos(angle_rad), v0 * np.sin(angle_rad) def equations(t, y): vx, vy = y[2], y[3] speed = np.sqrt(vx**2 + vy**2) drag = drag_coefficient * speed return [vx, vy, -drag * vx, -g - drag * vy] sol = solve_ivp(equations, [0, 5], [0, 0, vx0, vy0], dense_output=True) t = np.linspace(0, sol.t_events[0] if sol.t_events else 5, num=100) x, y = sol.sol(t)[0], sol.sol(t)[1] return x, y angles = [30, 45, 60] plt.figure(figsize=(8, 5)) for angle in angles: x, y = projectile_motion(20, angle, 9.81, drag_coefficient=0.01) plt.plot(x, y, label=f'Angle = {angle}\u00b0') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Vertical Distance (m)') plt.title('Projectile Motion with Air Resistance') plt.legend() plt.grid() plt.show()","title":"Simulating projectile motion with air resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}